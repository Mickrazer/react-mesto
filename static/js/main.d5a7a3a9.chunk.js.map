{"version":3,"sources":["components/Header.js","components/PopupWithForm.js","components/Card.js","utils/api.js","components/Info.js","components/Main.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","images/logo.svg","images/close.svg"],"names":["Header","className","src","logo","alt","PopupWithForm","props","handleClose","isOpen","body","name","buttonClose","onClick","title","type","placeholder","button","Card","link","like","style","backgroundImage","userName","document","querySelector","userJob","api","url","token","this","fetch","headers","authorization","then","res","ok","json","Promise","reject","status","catch","err","console","log","method","JSON","stringify","textContent","about","Info","onEditProfile","onAddPlace","onEditAvatar","useState","userAvatar","setUserAvatar","setUserName","userAbout","setUserAbout","useEffect","dataLoading","result","avatar","Main","cards","setCards","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","closeAllPopup","getInitialCards","i","length","push","map","index","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.d5a7a3a9.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg'\nimport '../index.css';\n\nfunction Header () {\n\treturn (\n\t\t<header className=\"header root__section\">\n\t      <img src={logo} alt=\"mesto logo\" className=\"logo\" />\n\t    </header>\n\t);\n}\n\nexport default Header;","import React from 'react';\nimport '../index.css';\nimport buttonClose from '../images/close.svg'\n\nfunction PopupWithForm(props) {\n\n\tconst { handleClose , isOpen, name} = props;\n\n\n\tconst body = isOpen && <div className=\"popup\"><div className=\"popup__content\">\n\t\t\t\t<img src={buttonClose} alt=\"\" className=\"popup__close\" onClick={handleClose}/>\n\t\t\t\t<h3 className=\"popup__title\">{props.title}</h3>\n\t\t\t\t<form className=\"popup__form\" name={props.name}>\n\t\t\t\t    <input type=\"text\" name=\"name\" className=\"popup__input popup__input_type_name\" placeholder=\"Название\" />\n\t\t\t\t    <input type=\"text\" name=\"link\" className=\"popup__input popup__input_type_link-url\" placeholder=\"Ссылка на картинку\" />\n\t\t\t\t    <button type className=\"button popup__button\">{props.button}</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t</div>\n\treturn(\n\t\t<div>\n\t\t\t{body}\n\t    </div>\n\t)\n}\n\n\nexport default PopupWithForm;","import React from 'react';\nimport '../index.css';\n\nfunction Card(props) {\n  const {name, link, like} = props;\n  return (\n        <div className=\"place-card\"> \n          <div className=\"place-card__image\" style={{backgroundImage: `url(${link})`}}> \n            <button className=\"place-card__delete-icon\"></button> \n          </div> \n          <div className=\"place-card__description\"> \n            <h3 className=\"place-card__name\">{name}</h3>\n            <div> \n              <button className={`place-card__like-icon`}></button>\n              <p className=\"place-card__like-icon_counter\">{like}</p>\n            </div> \n          </div> \n        </div>\n    );\n}\n\nexport default Card;","const userName = document.querySelector('.user-info__name');\nconst userJob = document.querySelector('.user-info__job'); \n\nclass Api {\n  constructor(url, token) {\n    this.url = url;\n    this.token = token;\n  }\n\n  getInitialCards() {\n  return fetch(`${this.url}/cards`, \n  { \n   headers: {\n    authorization: `${this.token}`\n  }\n  })\n  .then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  })\n\n  .catch((err)=> {\n    console.log(err);\n  });\n  }\n\n  dataLoading(){\n    return fetch(`${this.url}/users/me`,\n    {\n    headers: {\n      authorization: `${this.token}`\n    }      \n    })\n  .then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  })\n\n  .catch((err)=> {\n    console.log(err);\n  });    \n  }  \n  profileEditSave(){\n       return fetch(`${this.url}/users/me`,\n    {\n    method: 'PATCH',\n    headers: {\n      authorization: `${this.token}`,\n      'Content-Type': 'application/json'\n    },\n      body: JSON.stringify({\n      name: userName.textContent,\n      about: userJob.textContent\n      })\n    })\n  .then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  })\n\n  .catch((err)=> {\n    console.log(err);\n  });  \n  }\n  laiked(){\n      return fetch(`${this.url}/cards`, \n  { \n   headers: {\n    authorization: `${this.token}`\n  }\n  })\n  .then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  })\n\n  .catch((err)=> {\n    console.log(err);\n  });\n  }\n}\n\n\n\nconst api = new Api('https://nomoreparties.co/cohort3', '549369e6-22a5-4f49-bf55-d055fc07237e');\n\nexport default api;","import React, { useState, useEffect } from 'react';\n\nimport '../index.css';\nimport api from '../utils/api';\n\n\nfunction Info(props) {\n\n\tconst {onEditProfile, onAddPlace, onEditAvatar} = props;\n\tconst [userAvatar, setUserAvatar] = useState('')\n\tconst [userName, setUserName] = useState('')\n\tconst [userAbout, setUserAbout] = useState('')\n\n\tuseEffect(() => {\n\t\tapi.dataLoading().then((result) => {\n\t\t\tsetUserName(result.name);\n\t\t\tsetUserAvatar(result.avatar);\n\t\t\tsetUserAbout(result.about);\n\t\t});\n\n\t}, [])\n\n\treturn (\n\t\t<div className=\"user-info\">\n\t\t    <button className=\"user-info_avatar-btn\" onClick={onEditAvatar}>\n\t\t    \t<div className=\"user-info__photo\" style={{backgroundImage: `url(${userAvatar})`}}>\n\t\t    \t</div>\n\t\t    </button>\n\t\t   \t<div className=\"user-info__data\">\n\t\t        <h1 className=\"user-info__name\">{userName}</h1>\n\t\t        <p className=\"user-info__job\">{userAbout}</p>\n\t\t        <button className=\"button edit__button\" onClick={onEditProfile}>Edit</button>       \n\t\t    </div>\n\t\t    <button className=\"button user-info__button\" onClick={onAddPlace}>+</button>\n\t\t</div>\n\n\t);\n}\n\nexport default Info;","import React, { useState, useEffect } from 'react';\nimport '../index.css';\nimport PopupWithForm from './PopupWithForm';\nimport Card from './Card';\nimport Info from './Info';\nimport api from '../utils/api';\n\n\nfunction Main (props) {\n\n\t//\tстейт переменные\n\tconst [cards, setCards]= useState([])\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n\n    //функции изменения переменных\n\n  \tfunction handleAvatarClick() {\n    \tsetEditAvatarPopupOpen(true);\n  \t}\n\n\tfunction handleProfileClick() {\n\t    setEditProfilePopupOpen(true);\n\t} \n\n\tfunction handleAddPlaceClick() {\n\t    setAddPlacePopupOpen(true);\n\t}\n\n\tfunction closeAllPopup () {\n\t    setEditAvatarPopupOpen(false);\n\t    setEditProfilePopupOpen(false);\n\t    setAddPlacePopupOpen(false);\n\t}\n\n\tuseEffect(() => {\n\t\tapi.getInitialCards().then((result) => {\n\t\t\tfor(let i =0; i<result.length; i++){\n\t\t\t\tcards.push({\n\t\t\t\t\t'name': result[i]['name'],\n\t\t\t\t\t'link': result[i]['link'],\n\t\t\t\t\t'like': result[i]['likes'].length\n\t\t\t\t})\n\t\t\t}\n\t\t\tsetCards([\n\t\t\t...cards,\n\t\t\tcards\t\t\n\t\t\t]) //переделать\n\t\t})\n\t\tconsole.log('Смонтировался блок карточек')\n\t}, [])\n\n\n\treturn (\n\t\t<div className=\"root\">\n\t\t    <div className=\"profile root__section\">\n\t\t    \t<Info onEditProfile={handleProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleAvatarClick}/>\n\t\t    </div>\n\t    \t<div className=\"places-list root__section\">\n\t    \t\t{cards.map(({name, link, like}, index) => {\n\t    \t\t\treturn(\n\t    \t\t\t\t<Card name={name} link={link} like={like}/>\t\t\n\t    \t\t\t);\n\t    \t\t})}\n\t    \t</div>\n\n\t    \t{isEditAvatarPopupOpen} && <PopupWithForm name=\"avatar\" title=\"Изменить аватар\" button=\"Загрузить\" handleClose={closeAllPopup} isOpen={isEditAvatarPopupOpen}/>\n\t    \t{isEditProfilePopupOpen} && <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" button=\"Сохранить\" handleClose={closeAllPopup} isOpen={isEditProfilePopupOpen}/>\n\t    \t{isAddPlacePopupOpen} && <PopupWithForm name=\"new\" title=\"Новое место\" button=\"+\" handleClose={closeAllPopup} isOpen={isAddPlacePopupOpen }/>\n\t  </div>\n\t);\n}\n\nexport default Main;","import React from 'react';\nimport '../index.css';\n\nfunction Footer () {\n\treturn (\n\t\t<footer className=\"footer\">\n\t      <p className=\"footer_title\">Mesto 2021</p>\n\t    </footer>\n\t);\n}\n\nexport default Footer;","import React from 'react';\nimport '../index.css';\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\n\nfunction App() {\n\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer /> \n    </div> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.aa3e7ad2.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.41450a58.svg\";"],"sourceRoot":""}